{"version":3,"sources":["components/Navbar.js","components/Main/index.js","components/Program/Film.js","apis/omdb.js","actions/index.js","components/Program/FilmList.js","components/Program/index.js","components/Film/index.js","components/Reservation/ReservationSeats.js","components/Reservation/ReservationForm.js","components/Reservation/ReservationDone.js","components/Reservation/index.js","components/Routes.js","components/App.js","reducers/index.js","reducers/filmsReducer.js","reducers/filmReducer.js","index.js"],"names":["Navbar","style","background","padding","to","Main","Film","film","imdbID","className","alt","Title","src","Poster","Year","axios","create","baseURL","fetchFilms","title","dispatch","a","omdb","get","params","s","response","type","payload","data","Search","FilmList","this","props","renderList","films","map","x","key","React","Component","connect","state","Program","fetchFilm","match","id","renderFilm","info","push","i","ReservationSeats","ReservationForm","ReservationDone","href","Reservation","basename","path","exact","component","Router","App","Routes","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1df9abe9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                background: '#ccc',\r\n                padding: '5px'\r\n            }}\r\n        >\r\n            <Link to=\"/\"> To Main</Link>\r\n            <Link to=\"/program\"> To Program</Link>\r\n            <Link to=\"/reservation\"> To Reservation</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Main = () => {\r\n    return <div>Main</div>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Film = ({ film }) => {\r\n    return (\r\n        <Link to={'/film/' + film.imdbID} className=\"film\">\r\n            <img alt={film.Title} src={film.Poster} />\r\n            <p>\r\n                {film.Title}\r\n                <br />({film.Year})\r\n            </p>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Film;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://omdbapi.com/?apikey=144de458&'\r\n});\r\n","import omdb from '../apis/omdb';\r\n\r\nexport const fetchFilms = title => async dispatch => {\r\n    if (!title) return null;\r\n    const response = await omdb.get('', { params: { s: title } });\r\n    dispatch({ type: 'FETCH_FILMS', payload: response.data.Search });\r\n};\r\n\r\nexport const fetchFilm = id => async dispatch => {\r\n    if (!id) return null;\r\n    const response = await omdb.get('', { params: { i: id } });\r\n    dispatch({ type: 'FETCH_FILM', payload: response.data });\r\n};\r\n","import React from 'react';\r\nimport Film from './Film';\r\nimport { connect } from 'react-redux';\r\nimport { fetchFilms } from '../../actions';\r\n\r\nclass FilmList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchFilms('Batman');\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"film-list\">{this.renderList()}</div>;\r\n    }\r\n\r\n    renderList() {\r\n        if (!this.props.films) return <div />;\r\n        return this.props.films.map(x => {\r\n            return <Film key={x.imdbID} film={x} />;\r\n        });\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { films: state.films };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchFilms }\r\n)(FilmList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FilmList from './FilmList';\r\nimport { fetchFilms } from '../../actions';\r\nimport '../../css/Program.css';\r\n\r\nclass Program extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"program\">\r\n                <p>List of today's films: </p>\r\n                <FilmList />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { fetchFilms }\r\n)(Program);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchFilm } from '../../actions';\r\nimport '../../css/Film.css';\r\n\r\nclass Film extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchFilm(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        return <div>{this.renderFilm()}</div>;\r\n    }\r\n\r\n    renderFilm() {\r\n        if (!this.props.film) return null;\r\n        const film = this.props.film;\r\n\r\n        let info = [];\r\n        for (const x in film) {\r\n            info.push(\r\n                <div>\r\n                    <b>{x + ': '}</b> {'' + film[x]}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"film-details\">\r\n                <img src={film.Poster} />\r\n                <div className=\"film-info\">\r\n                    <div>{info}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { film: state.film };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchFilm }\r\n)(Film);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ReservationSeats = () => {\r\n    return (\r\n        <div>\r\n            <Link to=\"/form\">To Form</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReservationSeats;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ReservationForm = () => {\r\n    return (\r\n        <div>\r\n            <Link to=\"/done\">To Done</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReservationForm;\r\n","import React from \"react\";\r\n\r\nconst ReservationDone = () => {\r\n    return (\r\n        <div>\r\n            <a href=\"/\">good!</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReservationDone;\r\n","import { Switch, MemoryRouter, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport ReservationSeats from \"./ReservationSeats\";\r\nimport ReservationForm from \"./ReservationForm\";\r\nimport ReservationDone from \"./ReservationDone\";\r\n\r\nconst Reservation = () => {\r\n    return (\r\n        <MemoryRouter basename={\"reservation\"}>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ReservationSeats} />\r\n                <Route path=\"/form\" exact component={ReservationForm} />\r\n                <Route path=\"/done\" exact component={ReservationDone} />\r\n            </Switch>\r\n        </MemoryRouter>\r\n    );\r\n};\r\n\r\nexport default Reservation;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from './Main';\r\nimport Program from './Program';\r\nimport Film from './Film';\r\nimport Reservation from './Reservation';\r\n\r\nconst Router = () => {\r\n    return (\r\n        <Switch className=\"router\">\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/program\" exact component={Program} />\r\n            <Route path=\"/film/:id\" exact component={Film} />\r\n            <Route path=\"/reservation\" exact component={Reservation} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Routes from \"./Routes\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Routes />\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport filmsReducer from './filmsReducer';\r\nimport filmReducer from './filmReducer';\r\n\r\nexport default combineReducers({\r\n    films: filmsReducer,\r\n    film: filmReducer\r\n});\r\n","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_FILMS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_FILM':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}